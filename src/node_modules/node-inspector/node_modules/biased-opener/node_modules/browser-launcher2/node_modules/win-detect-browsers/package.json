{
  "name": "win-detect-browsers",
  "version": "2.1.0",
  "bin": {
    "win-detect-browsers": "./bin/detect-browsers"
  },
  "description": "Detect browsers on Windows",
  "main": "index.js",
  "dependencies": {
    "after": "^0.8.1",
    "concat-stream": "~1.4.8",
    "debug": "^2.1.0",
    "duplexify": "~3.3.0",
    "json-stream": "~1.0.0",
    "merge-stream": "~0.1.7",
    "path-exists": "~1.0.0",
    "through2": "~0.6.5",
    "unique-stream": "~2.0.2",
    "which": "^1.0.7",
    "xtend": "^4.0.0",
    "yargs": "~3.8.0"
  },
  "devDependencies": {
    "compare-version": "~0.1.2",
    "cp": "~0.2.0",
    "mkdirp": "~0.5.0",
    "phantomjs": "^1.9.12",
    "tape": "~4.0.0"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vweevers/win-detect-browsers"
  },
  "keywords": [
    "browser",
    "detect",
    "windows"
  ],
  "author": {
    "name": "Vincent Weevers"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/vweevers/win-detect-browsers/issues"
  },
  "homepage": "https://github.com/vweevers/win-detect-browsers",
  "readme": "# win-detect-browsers\r\n\r\n> Detects installed versions of Chrome, Chromium, Firefox, PhantomJS (local and global), Internet Explorer, Safari and Opera (Stable, Beta and Developer). Supports [Windows XP and up](https://github.com/vweevers/win-detect-browsers/wiki).\r\n\r\n[![npm status](http://img.shields.io/npm/v/win-detect-browsers.svg?style=flat-square)](https://www.npmjs.org/package/win-detect-browsers) [![Build status](https://img.shields.io/appveyor/ci/vweevers/win-detect-browsers.svg?style=flat-square)](https://ci.appveyor.com/project/vweevers/win-detect-browsers) [![Dependency Status](https://img.shields.io/david/vweevers/win-detect-browsers.svg?style=flat-square)](https://david-dm.org/vweevers/win-detect-browsers)\r\n\r\n[Command line](#command-line) / [API](#api) / [Changelog](#changelog) / [License](#license-and-credits)\r\n\r\n## About\r\n\r\nBasically, browser detection on Windows can't be done right. This is the *try-everything-and-fail-silently* approach. It accounts for architecture differences, normalizes environment variables, tries default locations, searches the registry (in the HKLM and HKCU hives), checks [Start Menu Internet Applications](http://msdn.microsoft.com/en-us/library/windows/desktop/dd203067(v=vs.85).aspx) and looks in `PATH`. Version numbers are then read from the executable metadata.\r\n\r\n`browser-launcher` by substack has [poor Windows support](https://github.com/substack/browser-launcher/issues/7), and it prompted me to create this module. It is now used in [browser-launcher2](https://github.com/benderjs/browser-launcher2), an active fork of `browser-launcher`.\r\n\r\n## Command line\r\n\r\nInstall globally and run:\r\n\r\n    npm i win-detect-browsers -g\r\n    win-detect-browsers\r\n\r\nExample output on 32-bits Windows 7:\r\n\r\n    Found 10 browsers in 382ms\r\n    \r\n    chrome 44.0.2390.0\r\n      @ C:\\Users\\vweevers\\AppData\\Local\\Google\\Chrome SxS\\Application\\chrome.exe\r\n    chrome 44.0.2383.0\r\n      @ C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe\r\n    chromium 44.0.2390.0\r\n      @ C:\\Users\\vweevers\\AppData\\Local\\Chromium\\Application\\chrome.exe\r\n    firefox 34.0.5.5443\r\n      @ C:\\Program Files\\Mozilla Firefox\\firefox.exe\r\n    ie 11.0.9600.17728\r\n      @ C:\\Program Files\\Internet Explorer\\iexplore.exe\r\n    opera 29.0.1795.47\r\n      @ C:\\Program Files\\Opera\\Launcher.exe\r\n    opera 29.0.1795.41\r\n      @ C:\\Program Files\\Opera beta\\Launcher.exe\r\n    opera 30.0.1835.5\r\n      @ C:\\Program Files\\Opera developer\\Launcher.exe\r\n    phantomjs 1.9.8.0\r\n      @ C:\\Program Files\\nodejs\\node_modules\\phantomjs\\lib\\phantom\\phantomjs.exe\r\n    safari 5.34.54.16\r\n      @ C:\\Program Files\\Safari\\Safari.exe\r\n\r\nEnable debug with `SET DEBUG=win-detect-browsers`.\r\n\r\n### examples\r\n\r\nDetect Internet Explorer and Phantomjs, without version numbers:\r\n\r\n    win-detect-browsers --no-version ie phantomjs\r\n\r\nReturn first found version of FF:\r\n\r\n    win-detect-browsers --lucky firefox\r\n\r\n## API\r\n\r\n- Streaming mode: `detect([names, options])` returns a readable stream.\r\n- Legacy callback mode: `detect([names, options,] cb)` calls `cb` with an array of results.\r\n\r\nWhere `names` is an array of browser names you want to find. If omitted, it will detect all browsers. Available `options` are:\r\n\r\n- `boolean lucky` whether to end the search for a browser after the first result. Note that this result is not consistent, because search is asynchronous. Defaults to `false`, meaning: find all versions.\r\n- `boolean version` whether to get version numbers, defaults to `true`.\r\n\r\n## examples\r\n\r\nDetect *[everything](http://youtu.be/k1yvvNvlXtg)*:\r\n\r\n```js\r\nvar detect   = require('win-detect-browsers')\r\n  , through2 = require('through2')\r\n\r\ndetect().pipe(through2.obj(function(b, _, next){\r\n  var format = \"\\n%s %s\\n  @ %s\"\r\n  console.log(format, b.name, b.version, b.path)\r\n  next()\r\n})\r\n\r\n```\r\n\r\nDetect only Chrome and IE, without version numbers:\r\n\r\n```js\r\ndetect(['chrome', 'ie'], {version: false})\r\n```\r\n\r\n## Changelog\r\n\r\n### 2.0.0\r\n\r\n- Speed improvement (2-4x), because it uses a single `cscript` process to query the registry (replaces `reg` queries) and a single `cscript` process to get the version numbers (replaces `wmic` queries).\r\n- Exports a readable object stream, but 1.x callback style is still supported (at least until 3.0)\r\n- Only emits executables (`*.exe`)\r\n- No longer uses command-line version flags or version numbers found in the registry or elsewhere. This simplifies the process and makes the version numbers consistent and more detailed.\r\n\r\n## License and credits\r\n\r\n[MIT](http://opensource.org/licenses/MIT) © [Vincent Weevers](http://vincentweevers.nl). Registry stream adapted from [regedit](https://www.npmjs.com/package/regedit) © [ironSource](http://www.ironsrc.com/).\r\n",
  "readmeFilename": "readme.md",
  "_id": "win-detect-browsers@2.1.0",
  "dist": {
    "shasum": "10459db88f3a5bab1547ed96dae3e2d08b75aebf"
  },
  "_from": "win-detect-browsers@^1.0.1",
  "_resolved": "https://registry.npmjs.org/win-detect-browsers/-/win-detect-browsers-2.1.0.tgz"
}
